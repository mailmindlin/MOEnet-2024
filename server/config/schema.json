{
	"$defs": {
		"AprilTagFieldConfig": {
			"description": "Inline AprilTag config",
			"properties": {
				"format": {
					"const": "inline",
					"title": "Format"
				},
				"field": {
					"$ref": "#/$defs/FieldLayout"
				},
				"tags": {
					"$ref": "#/$defs/RootModel_List_AprilTagInfo__"
				}
			},
			"required": [
				"format",
				"field",
				"tags"
			],
			"title": "AprilTagFieldConfig",
			"type": "object"
		},
		"AprilTagFieldFRCRef": {
			"description": "Reference to an AprilTag JSON file (in WPIlib format)",
			"properties": {
				"format": {
					"const": "frc",
					"title": "Format"
				},
				"path": {
					"description": "Path to AprilTag configuration",
					"format": "path",
					"title": "Path",
					"type": "string"
				},
				"tagFamily": {
					"description": "AprilTag family",
					"enum": [
						"tag16h5",
						"tag25h9",
						"tag36h11"
					],
					"title": "Tagfamily",
					"type": "string"
				},
				"tagSize": {
					"description": "AprilTag side length, in meters",
					"title": "Tagsize",
					"type": "number"
				}
			},
			"required": [
				"format",
				"path",
				"tagFamily",
				"tagSize"
			],
			"title": "AprilTagFieldFRCRef",
			"type": "object"
		},
		"AprilTagFieldSAIRef": {
			"description": "Reference to an AprilTag JSON file (in SpectacularAI format)",
			"properties": {
				"format": {
					"const": "sai",
					"title": "Format"
				},
				"path": {
					"description": "Path to AprilTag configuration",
					"format": "path",
					"title": "Path",
					"type": "string"
				}
			},
			"required": [
				"format",
				"path"
			],
			"title": "AprilTagFieldSAIRef",
			"type": "object"
		},
		"AprilTagInfo": {
			"properties": {
				"id": {
					"title": "Id",
					"type": "integer"
				},
				"size": {
					"title": "Size",
					"type": "number"
				},
				"family": {
					"title": "Family",
					"type": "string"
				},
				"tagToWorld": {
					"$ref": "#/$defs/RootModel_Tuple_RootModel_Tuple_float__float__float__float____RootModel_Tuple_float__float__float__float____RootModel_Tuple_float__float__float__float____RootModel_Tuple_float__float__float__float____"
				}
			},
			"required": [
				"id",
				"size",
				"family",
				"tagToWorld"
			],
			"title": "AprilTagInfo",
			"type": "object"
		},
		"CameraConfig": {
			"properties": {
				"id": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Human-readable name",
					"title": "Id"
				},
				"selector": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"$ref": "#/$defs/OakSelector"
						}
					],
					"description": "Which camera are we referencing?",
					"title": "Selector"
				},
				"max_usb": {
					"anyOf": [
						{
							"enum": [
								"FULL",
								"HIGH",
								"LOW",
								"SUPER",
								"SUPER_PLUS",
								"UNKNOWN"
							],
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"title": "Max Usb"
				},
				"retry": {
					"$ref": "#/$defs/RetryConfig"
				},
				"pose": {
					"anyOf": [
						{
							"properties": {
								"translation": {
									"properties": {
										"x": {
											"title": "X",
											"type": "number"
										},
										"y": {
											"title": "Y",
											"type": "number"
										},
										"z": {
											"title": "Z",
											"type": "number"
										}
									},
									"required": [
										"x",
										"y",
										"z"
									],
									"title": "Translation",
									"type": "object"
								},
								"rotation": {
									"properties": {
										"quaternion": {
											"properties": {
												"W": {
													"title": "W",
													"type": "number"
												},
												"X": {
													"title": "X",
													"type": "number"
												},
												"Y": {
													"title": "Y",
													"type": "number"
												},
												"Z": {
													"title": "Z",
													"type": "number"
												}
											},
											"required": [
												"W",
												"X",
												"Y",
												"Z"
											],
											"title": "Quaternion",
											"type": "object"
										}
									},
									"required": [
										"quaternion"
									],
									"title": "Rotation",
									"type": "object"
								}
							},
							"required": [
								"translation",
								"rotation"
							],
							"type": "object"
						},
						{
							"type": "null"
						}
					],
					"description": "Camera pose (in robot-space)",
					"title": "Pose"
				},
				"pipeline": {
					"anyOf": [
						{
							"$ref": "#/$defs/PipelineConfig"
						},
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Configure pipeline",
					"title": "Pipeline"
				}
			},
			"required": [
				"selector",
				"pose"
			],
			"title": "CameraConfig",
			"type": "object"
		},
		"CameraSelectorConfig": {
			"properties": {
				"ordinal": {
					"anyOf": [
						{
							"minimum": 1,
							"type": "integer"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Pick the nth camera found (unstable, starts at 1)",
					"title": "Ordinal"
				},
				"mxid": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Filter camera by mxid",
					"title": "Mxid"
				},
				"name": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Device name",
					"title": "Name"
				},
				"platform": {
					"default": null,
					"enum": [
						"X_LINK_ANY_PLATFORM",
						"X_LINK_MYRIAD_2",
						"X_LINK_MYRIAD_X",
						null
					],
					"title": "Platform"
				},
				"protocol": {
					"default": null,
					"enum": [
						"X_LINK_ANY_PROTOCOL",
						"X_LINK_IPC",
						"X_LINK_NMB_OF_PROTOCOLS",
						"X_LINK_PCIE",
						"X_LINK_TCP_IP",
						"X_LINK_USB_CDC",
						"X_LINK_USB_VSC",
						null
					],
					"title": "Protocol"
				},
				"id": {
					"description": "Human-readable ID",
					"title": "Id",
					"type": "string"
				},
				"pose": {
					"anyOf": [
						{
							"properties": {
								"translation": {
									"properties": {
										"x": {
											"title": "X",
											"type": "number"
										},
										"y": {
											"title": "Y",
											"type": "number"
										},
										"z": {
											"title": "Z",
											"type": "number"
										}
									},
									"required": [
										"x",
										"y",
										"z"
									],
									"title": "Translation",
									"type": "object"
								},
								"rotation": {
									"properties": {
										"quaternion": {
											"properties": {
												"W": {
													"title": "W",
													"type": "number"
												},
												"X": {
													"title": "X",
													"type": "number"
												},
												"Y": {
													"title": "Y",
													"type": "number"
												},
												"Z": {
													"title": "Z",
													"type": "number"
												}
											},
											"required": [
												"W",
												"X",
												"Y",
												"Z"
											],
											"title": "Quaternion",
											"type": "object"
										}
									},
									"required": [
										"quaternion"
									],
									"title": "Rotation",
									"type": "object"
								}
							},
							"required": [
								"translation",
								"rotation"
							],
							"type": "object"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"title": "Pose"
				}
			},
			"required": [
				"id"
			],
			"title": "CameraSelectorConfig",
			"type": "object"
		},
		"DataLogConfig": {
			"description": "Configuration for datalog",
			"properties": {
				"enabled": {
					"default": true,
					"title": "Enabled",
					"type": "boolean"
				},
				"folder": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"title": "Folder"
				}
			},
			"title": "DataLogConfig",
			"type": "object"
		},
		"EstimatorConfig": {
			"properties": {
				"pose_history": {
					"default": "PT3S",
					"description": "Length of pose replay buffer (seconds)",
					"format": "duration",
					"title": "Pose History",
					"type": "string"
				},
				"object_min_detections": {
					"default": 8,
					"description": "Number of times to have seen an object",
					"exclusiveMinimum": 0,
					"title": "Object Min Detections",
					"type": "integer"
				},
				"object_detected_duration": {
					"default": "PT1S",
					"description": "Length of time to keep an object detecting (seconds)",
					"format": "duration",
					"title": "Object Detected Duration",
					"type": "string"
				},
				"object_history_duration": {
					"default": "PT8S",
					"description": "Length of time to retain an object detection (seconds)",
					"format": "duration",
					"title": "Object History Duration",
					"type": "string"
				},
				"object_clustering_distance": {
					"default": 0.3,
					"description": "",
					"exclusiveMinimum": 0.0,
					"title": "Object Clustering Distance",
					"type": "number"
				},
				"object_min_depth": {
					"default": 0.5,
					"description": "",
					"exclusiveMinimum": 0.0,
					"title": "Object Min Depth",
					"type": "number"
				},
				"object_alpha": {
					"default": 0.2,
					"description": "",
					"exclusiveMinimum": 0.0,
					"title": "Object Alpha",
					"type": "number"
				}
			},
			"title": "EstimatorConfig",
			"type": "object"
		},
		"FieldLayout": {
			"properties": {
				"length": {
					"title": "Length",
					"type": "number"
				},
				"width": {
					"title": "Width",
					"type": "number"
				}
			},
			"required": [
				"length",
				"width"
			],
			"title": "FieldLayout",
			"type": "object"
		},
		"LogConfig": {
			"description": "Configuration for logging output",
			"properties": {
				"level": {
					"default": "DEBUG",
					"enum": [
						"DEBUG",
						"INFO",
						"WARN",
						"ERROR",
						"FATAL"
					],
					"title": "Level",
					"type": "string"
				},
				"file": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"title": "File"
				}
			},
			"title": "LogConfig",
			"type": "object"
		},
		"NNConfig": {
			"description": "Base config for NN",
			"properties": {
				"confidence_threshold": {
					"title": "Confidence Threshold",
					"type": "number"
				},
				"iou_threshold": {
					"title": "Iou Threshold",
					"type": "number"
				},
				"labels": {
					"items": {
						"type": "string"
					},
					"title": "Labels",
					"type": "array"
				},
				"depthLowerThreshold": {
					"title": "Depthlowerthreshold",
					"type": "integer"
				},
				"depthUpperThreshold": {
					"title": "Depthupperthreshold",
					"type": "integer"
				},
				"classes": {
					"title": "Classes",
					"type": "integer"
				},
				"coordinateSize": {
					"title": "Coordinatesize",
					"type": "integer"
				},
				"anchors": {
					"items": {
						"type": "number"
					},
					"title": "Anchors",
					"type": "array"
				},
				"anchor_masks": {
					"additionalProperties": {
						"items": {
							"type": "integer"
						},
						"type": "array"
					},
					"title": "Anchor Masks",
					"type": "object"
				}
			},
			"required": [
				"confidence_threshold",
				"iou_threshold",
				"labels",
				"depthLowerThreshold",
				"depthUpperThreshold",
				"classes",
				"coordinateSize",
				"anchors",
				"anchor_masks"
			],
			"title": "NNConfig",
			"type": "object"
		},
		"NavXConfig": {
			"description": "NavX configuration",
			"properties": {
				"port": {
					"description": "NavX serial port path",
					"title": "Port",
					"type": "string"
				},
				"update_rate": {
					"default": 60,
					"description": "NavX poll rate (in hertz)",
					"exclusiveMinimum": 0,
					"maximum": 255,
					"title": "Update Rate",
					"type": "integer"
				}
			},
			"required": [
				"port"
			],
			"title": "NavXConfig",
			"type": "object"
		},
		"NetworkTablesConfig": {
			"description": "Configure NetworkTables. Must be provided locally",
			"properties": {
				"enabled": {
					"default": true,
					"description": "Should anything be sent to NetworkTables?",
					"title": "Enabled",
					"type": "boolean"
				},
				"team": {
					"default": 365,
					"description": "FRC team number",
					"title": "Team",
					"type": "integer"
				},
				"port": {
					"default": 5810,
					"description": "Which port should we connect to?",
					"title": "Port",
					"type": "integer"
				},
				"host": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "NetworkTables host IP",
					"title": "Host"
				},
				"client_id": {
					"default": "MOEnet",
					"description": "Client connection name",
					"title": "Client Id",
					"type": "string"
				},
				"table": {
					"default": "moenet",
					"description": "Root table name",
					"title": "Table",
					"type": "string"
				},
				"log_level": {
					"default": "error",
					"description": "Minimum level to send logs",
					"title": "Log Level",
					"type": "string"
				},
				"log_lines": {
					"default": 10,
					"description": "Number of log lines to retain",
					"title": "Log Lines",
					"type": "integer"
				},
				"subscribeSleep": {
					"default": true,
					"description": "Should we listen for sleep control at `/moenet/rio_request_sleep`?",
					"title": "Subscribesleep",
					"type": "boolean"
				},
				"subscribeConfig": {
					"default": true,
					"description": "Should we listen for config updates at `/moenet/rio_dynamic_config`?",
					"title": "Subscribeconfig",
					"type": "boolean"
				},
				"publishLog": {
					"default": true,
					"description": "Should we publish logs to `/moenet/client_log`?",
					"title": "Publishlog",
					"type": "boolean"
				},
				"publishPing": {
					"default": true,
					"description": "Should we publish ping updates to `/moenet/client_ping`?",
					"title": "Publishping",
					"type": "boolean"
				},
				"publishErrors": {
					"default": true,
					"description": "Should we publish errors updates to `/moenet/client_error`?",
					"title": "Publisherrors",
					"type": "boolean"
				},
				"publishStatus": {
					"default": true,
					"title": "Publishstatus",
					"type": "boolean"
				},
				"publishConfig": {
					"default": true,
					"description": "Should we publish this config to `/moenet/client_config`?",
					"title": "Publishconfig",
					"type": "boolean"
				},
				"publishSystemInfo": {
					"default": true,
					"description": "Should we publish system info to `/moenet/client_telemetry`?",
					"title": "Publishsysteminfo",
					"type": "boolean"
				},
				"publishDetections": {
					"default": true,
					"description": "Publish object detections to `/moenet/client_detections`",
					"title": "Publishdetections",
					"type": "boolean"
				},
				"tfFieldToRobot": {
					"default": "pub",
					"description": "field -> robot transform (absolute pose)",
					"enum": [
						"sub",
						"pub",
						false
					],
					"title": "Tffieldtorobot"
				},
				"tfFieldToOdom": {
					"default": "pub",
					"description": "field -> odom transform (odometry estimate)",
					"enum": [
						"sub",
						"pub",
						false
					],
					"title": "Tffieldtoodom"
				},
				"tfOodomToRobot": {
					"default": "pub",
					"description": "odom->robot transform (odometry correction)",
					"enum": [
						"sub",
						"pub",
						false
					],
					"title": "Tfoodomtorobot"
				},
				"subscribePoseOverride": {
					"default": true,
					"description": "Allow the Rio to override poses",
					"title": "Subscribeposeoverride",
					"type": "boolean"
				},
				"publishField2dF2O": {
					"default": false,
					"description": "Publish Field2d widget (field->odom)",
					"title": "Publishfield2Df2O",
					"type": "boolean"
				},
				"publishField2dF2R": {
					"default": false,
					"description": "Publish Field2d widget (field->robot)",
					"title": "Publishfield2Df2R",
					"type": "boolean"
				},
				"publishField2dDets": {
					"default": false,
					"description": "Publish Field2d widget (field->notes)",
					"title": "Publishfield2Ddets",
					"type": "boolean"
				}
			},
			"title": "NetworkTablesConfig",
			"type": "object"
		},
		"OakSelector": {
			"properties": {
				"ordinal": {
					"anyOf": [
						{
							"minimum": 1,
							"type": "integer"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Pick the nth camera found (unstable, starts at 1)",
					"title": "Ordinal"
				},
				"mxid": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Filter camera by mxid",
					"title": "Mxid"
				},
				"name": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Device name",
					"title": "Name"
				},
				"platform": {
					"default": null,
					"enum": [
						"X_LINK_ANY_PLATFORM",
						"X_LINK_MYRIAD_2",
						"X_LINK_MYRIAD_X",
						null
					],
					"title": "Platform"
				},
				"protocol": {
					"default": null,
					"enum": [
						"X_LINK_ANY_PROTOCOL",
						"X_LINK_IPC",
						"X_LINK_NMB_OF_PROTOCOLS",
						"X_LINK_PCIE",
						"X_LINK_TCP_IP",
						"X_LINK_USB_CDC",
						"X_LINK_USB_VSC",
						null
					],
					"title": "Protocol"
				}
			},
			"title": "OakSelector",
			"type": "object"
		},
		"ObjectDetectionDefinition": {
			"description": "Configure an object detection pipeline",
			"properties": {
				"id": {
					"title": "Id",
					"type": "string"
				},
				"blobPath": {
					"description": "Path to NN blob",
					"format": "path",
					"title": "Blobpath",
					"type": "string"
				},
				"configPath": {
					"anyOf": [
						{
							"format": "path",
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Path to NN config",
					"title": "Configpath"
				},
				"config": {
					"anyOf": [
						{
							"$ref": "#/$defs/NNConfig"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Inline NN config"
				}
			},
			"required": [
				"id",
				"blobPath"
			],
			"title": "ObjectDetectionDefinition",
			"type": "object"
		},
		"PipelineConfig": {
			"properties": {
				"backend": {
					"const": "sai",
					"default": "sai",
					"title": "Backend"
				},
				"syncNN": {
					"default": false,
					"title": "Syncnn",
					"type": "boolean"
				},
				"slam": {
					"default": true,
					"title": "Slam",
					"type": "boolean"
				},
				"vio": {
					"default": false,
					"description": "Enable VIO",
					"title": "Vio",
					"type": "boolean"
				},
				"debugRgb": {
					"default": false,
					"title": "Debugrgb",
					"type": "boolean"
				},
				"debugLeft": {
					"default": false,
					"title": "Debugleft",
					"type": "boolean"
				},
				"debugRight": {
					"default": false,
					"title": "Debugright",
					"type": "boolean"
				},
				"debugDepth": {
					"default": false,
					"title": "Debugdepth",
					"type": "boolean"
				},
				"debugImageRate": {
					"anyOf": [
						{
							"type": "integer"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"title": "Debugimagerate"
				},
				"apriltag_explicit": {
					"default": false,
					"title": "Apriltag Explicit",
					"type": "boolean"
				},
				"telemetry": {
					"default": false,
					"title": "Telemetry",
					"type": "boolean"
				},
				"apriltag": {
					"anyOf": [
						{
							"discriminator": {
								"mapping": {
									"frc": "#/$defs/AprilTagFieldFRCRef",
									"inline": "#/$defs/AprilTagFieldConfig",
									"sai": "#/$defs/AprilTagFieldSAIRef"
								},
								"propertyName": "format"
							},
							"oneOf": [
								{
									"$ref": "#/$defs/AprilTagFieldFRCRef"
								},
								{
									"$ref": "#/$defs/AprilTagFieldSAIRef"
								},
								{
									"$ref": "#/$defs/AprilTagFieldConfig"
								}
							]
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "AprilTag configuration data",
					"title": "Apriltag"
				},
				"object_detection": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Which object detection pipeline should we use?",
					"title": "Object Detection"
				}
			},
			"title": "PipelineConfig",
			"type": "object"
		},
		"PipelineDefinition": {
			"properties": {
				"backend": {
					"const": "sai",
					"default": "sai",
					"title": "Backend"
				},
				"syncNN": {
					"default": false,
					"title": "Syncnn",
					"type": "boolean"
				},
				"slam": {
					"default": true,
					"title": "Slam",
					"type": "boolean"
				},
				"vio": {
					"default": false,
					"description": "Enable VIO",
					"title": "Vio",
					"type": "boolean"
				},
				"debugRgb": {
					"default": false,
					"title": "Debugrgb",
					"type": "boolean"
				},
				"debugLeft": {
					"default": false,
					"title": "Debugleft",
					"type": "boolean"
				},
				"debugRight": {
					"default": false,
					"title": "Debugright",
					"type": "boolean"
				},
				"debugDepth": {
					"default": false,
					"title": "Debugdepth",
					"type": "boolean"
				},
				"debugImageRate": {
					"anyOf": [
						{
							"type": "integer"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"title": "Debugimagerate"
				},
				"apriltag_explicit": {
					"default": false,
					"title": "Apriltag Explicit",
					"type": "boolean"
				},
				"telemetry": {
					"default": false,
					"title": "Telemetry",
					"type": "boolean"
				},
				"apriltag": {
					"anyOf": [
						{
							"discriminator": {
								"mapping": {
									"frc": "#/$defs/AprilTagFieldFRCRef",
									"inline": "#/$defs/AprilTagFieldConfig",
									"sai": "#/$defs/AprilTagFieldSAIRef"
								},
								"propertyName": "format"
							},
							"oneOf": [
								{
									"$ref": "#/$defs/AprilTagFieldFRCRef"
								},
								{
									"$ref": "#/$defs/AprilTagFieldSAIRef"
								},
								{
									"$ref": "#/$defs/AprilTagFieldConfig"
								}
							]
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "AprilTag configuration data",
					"title": "Apriltag"
				},
				"object_detection": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Which object detection pipeline should we use?",
					"title": "Object Detection"
				},
				"id": {
					"title": "Id",
					"type": "string"
				}
			},
			"required": [
				"id"
			],
			"title": "PipelineDefinition",
			"type": "object"
		},
		"RetryConfig": {
			"description": "Configure restart/retry logic",
			"properties": {
				"optional": {
					"default": false,
					"description": "Is it an error if this camera is not detected?",
					"title": "Optional",
					"type": "boolean"
				},
				"connection_tries": {
					"default": 1,
					"title": "Connection Tries",
					"type": "integer"
				},
				"connection_delay": {
					"default": "PT1S",
					"format": "duration",
					"title": "Connection Delay",
					"type": "string"
				},
				"restart_tries": {
					"default": 2,
					"title": "Restart Tries",
					"type": "integer"
				}
			},
			"title": "RetryConfig",
			"type": "object"
		},
		"RootModel_List_AprilTagInfo__": {
			"items": {
				"$ref": "#/$defs/AprilTagInfo"
			},
			"title": "RootModel[List[AprilTagInfo]]",
			"type": "array"
		},
		"RootModel_Tuple_RootModel_Tuple_float__float__float__float____RootModel_Tuple_float__float__float__float____RootModel_Tuple_float__float__float__float____RootModel_Tuple_float__float__float__float____": {
			"maxItems": 4,
			"minItems": 4,
			"prefixItems": [
				{
					"$ref": "#/$defs/RootModel_Tuple_float__float__float__float__"
				},
				{
					"$ref": "#/$defs/RootModel_Tuple_float__float__float__float__"
				},
				{
					"$ref": "#/$defs/RootModel_Tuple_float__float__float__float__"
				},
				{
					"$ref": "#/$defs/RootModel_Tuple_float__float__float__float__"
				}
			],
			"title": "RootModel[Tuple[RootModel[Tuple[float, float, float, float]], RootModel[Tuple[float, float, float, float]], RootModel[Tuple[float, float, float, float]], RootModel[Tuple[float, float, float, float]]]]",
			"type": "array"
		},
		"RootModel_Tuple_float__float__float__float__": {
			"maxItems": 4,
			"minItems": 4,
			"prefixItems": [
				{
					"type": "number"
				},
				{
					"type": "number"
				},
				{
					"type": "number"
				},
				{
					"type": "number"
				}
			],
			"title": "RootModel[Tuple[float, float, float, float]]",
			"type": "array"
		},
		"WebConfig": {
			"description": "Configure webserver",
			"properties": {
				"enabled": {
					"default": true,
					"title": "Enabled",
					"type": "boolean"
				},
				"host": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Host for HTTP server",
					"title": "Host"
				},
				"port": {
					"anyOf": [
						{
							"exclusiveMinimum": 0,
							"type": "integer"
						},
						{
							"type": "null"
						}
					],
					"default": 8080,
					"description": "Port for HTTP server",
					"title": "Port"
				},
				"video_codec": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "Force a specific video codec (e.g. video/H264)",
					"title": "Video Codec"
				},
				"cert_file": {
					"anyOf": [
						{
							"format": "path",
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "SSL certificate file (for HTTPS)",
					"title": "Cert File"
				},
				"key_file": {
					"anyOf": [
						{
							"format": "path",
							"type": "string"
						},
						{
							"type": "null"
						}
					],
					"default": null,
					"description": "SSL key file (for HTTPS)",
					"title": "Key File"
				}
			},
			"title": "WebConfig",
			"type": "object"
		}
	},
	"description": "Local config data",
	"properties": {
		"allow_overwrite": {
			"default": false,
			"description": "Allow remote changes to overwrite this config?",
			"title": "Allow Overwrite",
			"type": "boolean"
		},
		"nt": {
			"allOf": [
				{
					"$ref": "#/$defs/NetworkTablesConfig"
				}
			],
			"description": "NetworkTables data",
			"title": "NetworkTables"
		},
		"timer": {
			"anyOf": [
				{
					"const": "system"
				},
				{
					"$ref": "#/$defs/NavXConfig"
				}
			],
			"default": "system",
			"description": "Timer for synchronizing with RoboRIO",
			"title": "Timer"
		},
		"log": {
			"$ref": "#/$defs/LogConfig"
		},
		"datalog": {
			"$ref": "#/$defs/DataLogConfig"
		},
		"estimator": {
			"$ref": "#/$defs/EstimatorConfig"
		},
		"pipelines": {
			"items": {
				"$ref": "#/$defs/ObjectDetectionDefinition"
			},
			"title": "Pipelines",
			"type": "array"
		},
		"camera_selectors": {
			"items": {
				"$ref": "#/$defs/CameraSelectorConfig"
			},
			"title": "Camera Selectors",
			"type": "array"
		},
		"cameras": {
			"default": null,
			"description": "Configuration for individual cameras",
			"items": {
				"$ref": "#/$defs/CameraConfig"
			},
			"title": "Cameras",
			"type": "array"
		},
		"presets": {
			"description": "Global SLAM config (used on cameras where slam=True)",
			"items": {
				"$ref": "#/$defs/PipelineDefinition"
			},
			"title": "Presets",
			"type": "array"
		},
		"web": {
			"$ref": "#/$defs/WebConfig"
		}
	},
	"title": "LocalConfig",
	"type": "object"
}